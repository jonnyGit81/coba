// Code generated by protoc-gen-go. DO NOT EDIT.
// source: price_api.proto

package price_api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Prices struct {
	Symbol               string             `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Time                 string             `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	Bid                  string             `protobuf:"bytes,3,opt,name=bid,proto3" json:"bid,omitempty"`
	Ask                  string             `protobuf:"bytes,4,opt,name=ask,proto3" json:"ask,omitempty"`
	LastTrade            string             `protobuf:"bytes,5,opt,name=last_trade,json=lastTrade,proto3" json:"last_trade,omitempty"`
	Bids                 []*PriceLevel      `protobuf:"bytes,6,rep,name=bids,proto3" json:"bids,omitempty"`
	Asks                 []*PriceLevel      `protobuf:"bytes,7,rep,name=asks,proto3" json:"asks,omitempty"`
	BidOrders            []*PriceLevelOrder `protobuf:"bytes,8,rep,name=bid_orders,json=bidOrders,proto3" json:"bid_orders,omitempty"`
	AskOrders            []*PriceLevelOrder `protobuf:"bytes,9,rep,name=ask_orders,json=askOrders,proto3" json:"ask_orders,omitempty"`
	LastTradeQty         string             `protobuf:"bytes,10,opt,name=last_trade_qty,json=lastTradeQty,proto3" json:"last_trade_qty,omitempty"`
	LastTradeTime        string             `protobuf:"bytes,11,opt,name=last_trade_time,json=lastTradeTime,proto3" json:"last_trade_time,omitempty"`
	ValueDate            string             `protobuf:"bytes,12,opt,name=value_date,json=valueDate,proto3" json:"value_date,omitempty"`
	BidQuoteId           string             `protobuf:"bytes,13,opt,name=bid_quote_id,json=bidQuoteId,proto3" json:"bid_quote_id,omitempty"`
	AskQuoteId           string             `protobuf:"bytes,14,opt,name=ask_quote_id,json=askQuoteId,proto3" json:"ask_quote_id,omitempty"`
	TradingSessionId     string             `protobuf:"bytes,15,opt,name=trading_session_id,json=tradingSessionId,proto3" json:"trading_session_id,omitempty"`
	Type                 string             `protobuf:"bytes,16,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Prices) Reset()         { *m = Prices{} }
func (m *Prices) String() string { return proto.CompactTextString(m) }
func (*Prices) ProtoMessage()    {}
func (*Prices) Descriptor() ([]byte, []int) {
	return fileDescriptor_dba14d02e122fa91, []int{0}
}

func (m *Prices) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Prices.Unmarshal(m, b)
}
func (m *Prices) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Prices.Marshal(b, m, deterministic)
}
func (m *Prices) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Prices.Merge(m, src)
}
func (m *Prices) XXX_Size() int {
	return xxx_messageInfo_Prices.Size(m)
}
func (m *Prices) XXX_DiscardUnknown() {
	xxx_messageInfo_Prices.DiscardUnknown(m)
}

var xxx_messageInfo_Prices proto.InternalMessageInfo

func (m *Prices) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *Prices) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *Prices) GetBid() string {
	if m != nil {
		return m.Bid
	}
	return ""
}

func (m *Prices) GetAsk() string {
	if m != nil {
		return m.Ask
	}
	return ""
}

func (m *Prices) GetLastTrade() string {
	if m != nil {
		return m.LastTrade
	}
	return ""
}

func (m *Prices) GetBids() []*PriceLevel {
	if m != nil {
		return m.Bids
	}
	return nil
}

func (m *Prices) GetAsks() []*PriceLevel {
	if m != nil {
		return m.Asks
	}
	return nil
}

func (m *Prices) GetBidOrders() []*PriceLevelOrder {
	if m != nil {
		return m.BidOrders
	}
	return nil
}

func (m *Prices) GetAskOrders() []*PriceLevelOrder {
	if m != nil {
		return m.AskOrders
	}
	return nil
}

func (m *Prices) GetLastTradeQty() string {
	if m != nil {
		return m.LastTradeQty
	}
	return ""
}

func (m *Prices) GetLastTradeTime() string {
	if m != nil {
		return m.LastTradeTime
	}
	return ""
}

func (m *Prices) GetValueDate() string {
	if m != nil {
		return m.ValueDate
	}
	return ""
}

func (m *Prices) GetBidQuoteId() string {
	if m != nil {
		return m.BidQuoteId
	}
	return ""
}

func (m *Prices) GetAskQuoteId() string {
	if m != nil {
		return m.AskQuoteId
	}
	return ""
}

func (m *Prices) GetTradingSessionId() string {
	if m != nil {
		return m.TradingSessionId
	}
	return ""
}

func (m *Prices) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type PriceLevel struct {
	Price                string   `protobuf:"bytes,1,opt,name=price,proto3" json:"price,omitempty"`
	Qty                  string   `protobuf:"bytes,2,opt,name=qty,proto3" json:"qty,omitempty"`
	OrderCount           string   `protobuf:"bytes,3,opt,name=order_count,json=orderCount,proto3" json:"order_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PriceLevel) Reset()         { *m = PriceLevel{} }
func (m *PriceLevel) String() string { return proto.CompactTextString(m) }
func (*PriceLevel) ProtoMessage()    {}
func (*PriceLevel) Descriptor() ([]byte, []int) {
	return fileDescriptor_dba14d02e122fa91, []int{1}
}

func (m *PriceLevel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PriceLevel.Unmarshal(m, b)
}
func (m *PriceLevel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PriceLevel.Marshal(b, m, deterministic)
}
func (m *PriceLevel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PriceLevel.Merge(m, src)
}
func (m *PriceLevel) XXX_Size() int {
	return xxx_messageInfo_PriceLevel.Size(m)
}
func (m *PriceLevel) XXX_DiscardUnknown() {
	xxx_messageInfo_PriceLevel.DiscardUnknown(m)
}

var xxx_messageInfo_PriceLevel proto.InternalMessageInfo

func (m *PriceLevel) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

func (m *PriceLevel) GetQty() string {
	if m != nil {
		return m.Qty
	}
	return ""
}

func (m *PriceLevel) GetOrderCount() string {
	if m != nil {
		return m.OrderCount
	}
	return ""
}

type PriceLevelOrder struct {
	Price                string   `protobuf:"bytes,1,opt,name=price,proto3" json:"price,omitempty"`
	Qty                  string   `protobuf:"bytes,2,opt,name=qty,proto3" json:"qty,omitempty"`
	OrderId              string   `protobuf:"bytes,3,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PriceLevelOrder) Reset()         { *m = PriceLevelOrder{} }
func (m *PriceLevelOrder) String() string { return proto.CompactTextString(m) }
func (*PriceLevelOrder) ProtoMessage()    {}
func (*PriceLevelOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_dba14d02e122fa91, []int{2}
}

func (m *PriceLevelOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PriceLevelOrder.Unmarshal(m, b)
}
func (m *PriceLevelOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PriceLevelOrder.Marshal(b, m, deterministic)
}
func (m *PriceLevelOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PriceLevelOrder.Merge(m, src)
}
func (m *PriceLevelOrder) XXX_Size() int {
	return xxx_messageInfo_PriceLevelOrder.Size(m)
}
func (m *PriceLevelOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_PriceLevelOrder.DiscardUnknown(m)
}

var xxx_messageInfo_PriceLevelOrder proto.InternalMessageInfo

func (m *PriceLevelOrder) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

func (m *PriceLevelOrder) GetQty() string {
	if m != nil {
		return m.Qty
	}
	return ""
}

func (m *PriceLevelOrder) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type Trade struct {
	Symbol               string   `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Time                 string   `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	Price                string   `protobuf:"bytes,3,opt,name=price,proto3" json:"price,omitempty"`
	Qty                  string   `protobuf:"bytes,4,opt,name=qty,proto3" json:"qty,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Trade) Reset()         { *m = Trade{} }
func (m *Trade) String() string { return proto.CompactTextString(m) }
func (*Trade) ProtoMessage()    {}
func (*Trade) Descriptor() ([]byte, []int) {
	return fileDescriptor_dba14d02e122fa91, []int{3}
}

func (m *Trade) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trade.Unmarshal(m, b)
}
func (m *Trade) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trade.Marshal(b, m, deterministic)
}
func (m *Trade) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trade.Merge(m, src)
}
func (m *Trade) XXX_Size() int {
	return xxx_messageInfo_Trade.Size(m)
}
func (m *Trade) XXX_DiscardUnknown() {
	xxx_messageInfo_Trade.DiscardUnknown(m)
}

var xxx_messageInfo_Trade proto.InternalMessageInfo

func (m *Trade) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *Trade) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *Trade) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

func (m *Trade) GetQty() string {
	if m != nil {
		return m.Qty
	}
	return ""
}

type PriceParams struct {
	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// string ref_symbol = 2;
	RefSymbols           []string `protobuf:"bytes,2,rep,name=ref_symbols,json=refSymbols,proto3" json:"ref_symbols,omitempty"`
	ConvFactor           string   `protobuf:"bytes,3,opt,name=conv_factor,json=convFactor,proto3" json:"conv_factor,omitempty"`
	FxSymbol             string   `protobuf:"bytes,4,opt,name=fx_symbol,json=fxSymbol,proto3" json:"fx_symbol,omitempty"`
	BidPremium           string   `protobuf:"bytes,5,opt,name=bid_premium,json=bidPremium,proto3" json:"bid_premium,omitempty"`
	AskPremium           string   `protobuf:"bytes,6,opt,name=ask_premium,json=askPremium,proto3" json:"ask_premium,omitempty"`
	Spread               string   `protobuf:"bytes,7,opt,name=spread,proto3" json:"spread,omitempty"`
	OrderType            string   `protobuf:"bytes,8,opt,name=order_type,json=orderType,proto3" json:"order_type,omitempty"`
	RefType              string   `protobuf:"bytes,9,opt,name=ref_type,json=refType,proto3" json:"ref_type,omitempty"`
	PremiumType          string   `protobuf:"bytes,10,opt,name=premium_type,json=premiumType,proto3" json:"premium_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PriceParams) Reset()         { *m = PriceParams{} }
func (m *PriceParams) String() string { return proto.CompactTextString(m) }
func (*PriceParams) ProtoMessage()    {}
func (*PriceParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_dba14d02e122fa91, []int{4}
}

func (m *PriceParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PriceParams.Unmarshal(m, b)
}
func (m *PriceParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PriceParams.Marshal(b, m, deterministic)
}
func (m *PriceParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PriceParams.Merge(m, src)
}
func (m *PriceParams) XXX_Size() int {
	return xxx_messageInfo_PriceParams.Size(m)
}
func (m *PriceParams) XXX_DiscardUnknown() {
	xxx_messageInfo_PriceParams.DiscardUnknown(m)
}

var xxx_messageInfo_PriceParams proto.InternalMessageInfo

func (m *PriceParams) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *PriceParams) GetRefSymbols() []string {
	if m != nil {
		return m.RefSymbols
	}
	return nil
}

func (m *PriceParams) GetConvFactor() string {
	if m != nil {
		return m.ConvFactor
	}
	return ""
}

func (m *PriceParams) GetFxSymbol() string {
	if m != nil {
		return m.FxSymbol
	}
	return ""
}

func (m *PriceParams) GetBidPremium() string {
	if m != nil {
		return m.BidPremium
	}
	return ""
}

func (m *PriceParams) GetAskPremium() string {
	if m != nil {
		return m.AskPremium
	}
	return ""
}

func (m *PriceParams) GetSpread() string {
	if m != nil {
		return m.Spread
	}
	return ""
}

func (m *PriceParams) GetOrderType() string {
	if m != nil {
		return m.OrderType
	}
	return ""
}

func (m *PriceParams) GetRefType() string {
	if m != nil {
		return m.RefType
	}
	return ""
}

func (m *PriceParams) GetPremiumType() string {
	if m != nil {
		return m.PremiumType
	}
	return ""
}

type GetPriceStreamReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPriceStreamReq) Reset()         { *m = GetPriceStreamReq{} }
func (m *GetPriceStreamReq) String() string { return proto.CompactTextString(m) }
func (*GetPriceStreamReq) ProtoMessage()    {}
func (*GetPriceStreamReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dba14d02e122fa91, []int{5}
}

func (m *GetPriceStreamReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPriceStreamReq.Unmarshal(m, b)
}
func (m *GetPriceStreamReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPriceStreamReq.Marshal(b, m, deterministic)
}
func (m *GetPriceStreamReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPriceStreamReq.Merge(m, src)
}
func (m *GetPriceStreamReq) XXX_Size() int {
	return xxx_messageInfo_GetPriceStreamReq.Size(m)
}
func (m *GetPriceStreamReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPriceStreamReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetPriceStreamReq proto.InternalMessageInfo

type StreamResponse struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Prices               *Prices  `protobuf:"bytes,2,opt,name=prices,proto3" json:"prices,omitempty"`
	Trade                *Trade   `protobuf:"bytes,3,opt,name=trade,proto3" json:"trade,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamResponse) Reset()         { *m = StreamResponse{} }
func (m *StreamResponse) String() string { return proto.CompactTextString(m) }
func (*StreamResponse) ProtoMessage()    {}
func (*StreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dba14d02e122fa91, []int{6}
}

func (m *StreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamResponse.Unmarshal(m, b)
}
func (m *StreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamResponse.Marshal(b, m, deterministic)
}
func (m *StreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamResponse.Merge(m, src)
}
func (m *StreamResponse) XXX_Size() int {
	return xxx_messageInfo_StreamResponse.Size(m)
}
func (m *StreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamResponse proto.InternalMessageInfo

func (m *StreamResponse) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *StreamResponse) GetPrices() *Prices {
	if m != nil {
		return m.Prices
	}
	return nil
}

func (m *StreamResponse) GetTrade() *Trade {
	if m != nil {
		return m.Trade
	}
	return nil
}

type SubscribeReq struct {
	Symbol               string   `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	ValueDate            string   `protobuf:"bytes,2,opt,name=value_date,json=valueDate,proto3" json:"value_date,omitempty"`
	Qty                  string   `protobuf:"bytes,3,opt,name=qty,proto3" json:"qty,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeReq) Reset()         { *m = SubscribeReq{} }
func (m *SubscribeReq) String() string { return proto.CompactTextString(m) }
func (*SubscribeReq) ProtoMessage()    {}
func (*SubscribeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dba14d02e122fa91, []int{7}
}

func (m *SubscribeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeReq.Unmarshal(m, b)
}
func (m *SubscribeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeReq.Marshal(b, m, deterministic)
}
func (m *SubscribeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeReq.Merge(m, src)
}
func (m *SubscribeReq) XXX_Size() int {
	return xxx_messageInfo_SubscribeReq.Size(m)
}
func (m *SubscribeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeReq.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeReq proto.InternalMessageInfo

func (m *SubscribeReq) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *SubscribeReq) GetValueDate() string {
	if m != nil {
		return m.ValueDate
	}
	return ""
}

func (m *SubscribeReq) GetQty() string {
	if m != nil {
		return m.Qty
	}
	return ""
}

type SubscribeResp struct {
	SubId                string   `protobuf:"bytes,1,opt,name=sub_id,json=subId,proto3" json:"sub_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeResp) Reset()         { *m = SubscribeResp{} }
func (m *SubscribeResp) String() string { return proto.CompactTextString(m) }
func (*SubscribeResp) ProtoMessage()    {}
func (*SubscribeResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_dba14d02e122fa91, []int{8}
}

func (m *SubscribeResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeResp.Unmarshal(m, b)
}
func (m *SubscribeResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeResp.Marshal(b, m, deterministic)
}
func (m *SubscribeResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeResp.Merge(m, src)
}
func (m *SubscribeResp) XXX_Size() int {
	return xxx_messageInfo_SubscribeResp.Size(m)
}
func (m *SubscribeResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeResp.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeResp proto.InternalMessageInfo

func (m *SubscribeResp) GetSubId() string {
	if m != nil {
		return m.SubId
	}
	return ""
}

type UnsubscribeReq struct {
	SubId                string   `protobuf:"bytes,1,opt,name=sub_id,json=subId,proto3" json:"sub_id,omitempty"`
	Symbol               string   `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	ValueDate            string   `protobuf:"bytes,3,opt,name=value_date,json=valueDate,proto3" json:"value_date,omitempty"`
	Qty                  string   `protobuf:"bytes,4,opt,name=qty,proto3" json:"qty,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnsubscribeReq) Reset()         { *m = UnsubscribeReq{} }
func (m *UnsubscribeReq) String() string { return proto.CompactTextString(m) }
func (*UnsubscribeReq) ProtoMessage()    {}
func (*UnsubscribeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dba14d02e122fa91, []int{9}
}

func (m *UnsubscribeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnsubscribeReq.Unmarshal(m, b)
}
func (m *UnsubscribeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnsubscribeReq.Marshal(b, m, deterministic)
}
func (m *UnsubscribeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnsubscribeReq.Merge(m, src)
}
func (m *UnsubscribeReq) XXX_Size() int {
	return xxx_messageInfo_UnsubscribeReq.Size(m)
}
func (m *UnsubscribeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UnsubscribeReq.DiscardUnknown(m)
}

var xxx_messageInfo_UnsubscribeReq proto.InternalMessageInfo

func (m *UnsubscribeReq) GetSubId() string {
	if m != nil {
		return m.SubId
	}
	return ""
}

func (m *UnsubscribeReq) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *UnsubscribeReq) GetValueDate() string {
	if m != nil {
		return m.ValueDate
	}
	return ""
}

func (m *UnsubscribeReq) GetQty() string {
	if m != nil {
		return m.Qty
	}
	return ""
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_dba14d02e122fa91, []int{10}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type UpdateAccountReq struct {
	AccountId            string   `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CanSendOrders        bool     `protobuf:"varint,3,opt,name=can_send_orders,json=canSendOrders,proto3" json:"can_send_orders,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateAccountReq) Reset()         { *m = UpdateAccountReq{} }
func (m *UpdateAccountReq) String() string { return proto.CompactTextString(m) }
func (*UpdateAccountReq) ProtoMessage()    {}
func (*UpdateAccountReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_dba14d02e122fa91, []int{11}
}

func (m *UpdateAccountReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateAccountReq.Unmarshal(m, b)
}
func (m *UpdateAccountReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateAccountReq.Marshal(b, m, deterministic)
}
func (m *UpdateAccountReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAccountReq.Merge(m, src)
}
func (m *UpdateAccountReq) XXX_Size() int {
	return xxx_messageInfo_UpdateAccountReq.Size(m)
}
func (m *UpdateAccountReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAccountReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAccountReq proto.InternalMessageInfo

func (m *UpdateAccountReq) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *UpdateAccountReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateAccountReq) GetCanSendOrders() bool {
	if m != nil {
		return m.CanSendOrders
	}
	return false
}

func init() {
	proto.RegisterType((*Prices)(nil), "Prices")
	proto.RegisterType((*PriceLevel)(nil), "PriceLevel")
	proto.RegisterType((*PriceLevelOrder)(nil), "PriceLevelOrder")
	proto.RegisterType((*Trade)(nil), "Trade")
	proto.RegisterType((*PriceParams)(nil), "PriceParams")
	proto.RegisterType((*GetPriceStreamReq)(nil), "GetPriceStreamReq")
	proto.RegisterType((*StreamResponse)(nil), "StreamResponse")
	proto.RegisterType((*SubscribeReq)(nil), "SubscribeReq")
	proto.RegisterType((*SubscribeResp)(nil), "SubscribeResp")
	proto.RegisterType((*UnsubscribeReq)(nil), "UnsubscribeReq")
	proto.RegisterType((*Empty)(nil), "Empty")
	proto.RegisterType((*UpdateAccountReq)(nil), "UpdateAccountReq")
}

func init() { proto.RegisterFile("price_api.proto", fileDescriptor_dba14d02e122fa91) }

var fileDescriptor_dba14d02e122fa91 = []byte{
	// 838 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0xdb, 0x8e, 0xe3, 0x44,
	0x10, 0xdd, 0xc4, 0x89, 0x13, 0x97, 0x73, 0xdb, 0xe6, 0x22, 0x33, 0xec, 0x90, 0x60, 0xa1, 0xd5,
	0x3c, 0x8c, 0x0c, 0x1a, 0x9e, 0x78, 0x5c, 0x71, 0x53, 0x24, 0xb4, 0x64, 0x9d, 0x8c, 0x78, 0xe0,
	0xc1, 0x6a, 0xdb, 0x1d, 0x64, 0x25, 0xbe, 0xc4, 0xed, 0xcc, 0x4e, 0x7e, 0x82, 0x4f, 0xe1, 0x07,
	0xf8, 0x39, 0x54, 0xd5, 0x1d, 0xc7, 0x19, 0x26, 0x88, 0x7d, 0x73, 0x9d, 0x3a, 0xdd, 0x5d, 0x5d,
	0xe7, 0x54, 0x1b, 0xc6, 0x45, 0x99, 0x44, 0x22, 0xe0, 0x45, 0xe2, 0x15, 0x65, 0x5e, 0xe5, 0xee,
	0x9f, 0x1d, 0x30, 0x17, 0x88, 0x49, 0xf6, 0x29, 0x98, 0xf2, 0x90, 0x86, 0xf9, 0xd6, 0x69, 0xcd,
	0x5a, 0x37, 0x96, 0xaf, 0x23, 0xc6, 0xa0, 0x53, 0x25, 0xa9, 0x70, 0xda, 0x84, 0xd2, 0x37, 0x9b,
	0x80, 0x11, 0x26, 0xb1, 0x63, 0x10, 0x84, 0x9f, 0x88, 0x70, 0xb9, 0x71, 0x3a, 0x0a, 0xe1, 0x72,
	0xc3, 0xae, 0x01, 0xb6, 0x5c, 0x56, 0x41, 0x55, 0xf2, 0x58, 0x38, 0x5d, 0x4a, 0x58, 0x88, 0xac,
	0x10, 0x60, 0x53, 0xe8, 0x84, 0x49, 0x2c, 0x1d, 0x73, 0x66, 0xdc, 0xd8, 0x77, 0xb6, 0x47, 0x55,
	0xfc, 0x22, 0x1e, 0xc4, 0xd6, 0xa7, 0x04, 0x12, 0xb8, 0xdc, 0x48, 0xa7, 0xf7, 0x0c, 0x01, 0x13,
	0xec, 0x6b, 0x80, 0x30, 0x89, 0x83, 0xbc, 0x8c, 0x45, 0x29, 0x9d, 0x3e, 0xd1, 0x26, 0x0d, 0xda,
	0xaf, 0x98, 0xf0, 0xad, 0x30, 0x89, 0xe9, 0x8b, 0x16, 0x70, 0xb9, 0x39, 0x2e, 0xb0, 0x2e, 0x2d,
	0xe0, 0x72, 0xa3, 0x17, 0x7c, 0x05, 0xa3, 0xd3, 0x15, 0x82, 0x5d, 0x75, 0x70, 0x80, 0xae, 0x31,
	0xa8, 0xaf, 0xf1, 0xae, 0x3a, 0xb0, 0xd7, 0x30, 0x6e, 0xb0, 0xa8, 0x57, 0x36, 0xd1, 0x86, 0x35,
	0x6d, 0x85, 0x4d, 0xbb, 0x06, 0x78, 0xe0, 0xdb, 0xbd, 0x08, 0x62, 0x5e, 0x09, 0x67, 0xa0, 0x1a,
	0x42, 0xc8, 0x0f, 0xbc, 0x12, 0x6c, 0x06, 0x03, 0xbc, 0xce, 0x6e, 0x9f, 0x57, 0x22, 0x48, 0x62,
	0x67, 0x48, 0x04, 0xbc, 0xe2, 0x3b, 0x84, 0xe6, 0x31, 0x32, 0xb0, 0xfe, 0x9a, 0x31, 0x52, 0x0c,
	0x2e, 0x37, 0x47, 0xc6, 0x2d, 0x30, 0xac, 0x22, 0xc9, 0xfe, 0x08, 0xa4, 0x90, 0x32, 0xc9, 0x33,
	0xe4, 0x8d, 0x89, 0x37, 0xd1, 0x99, 0xa5, 0x4a, 0xcc, 0x63, 0x52, 0xf6, 0x50, 0x08, 0x67, 0xa2,
	0x95, 0x3d, 0x14, 0xc2, 0xbd, 0x07, 0x38, 0x35, 0x84, 0x7d, 0x0c, 0x5d, 0x72, 0x8c, 0xb6, 0x84,
	0x0a, 0x50, 0x6b, 0xec, 0x85, 0x32, 0x04, 0x7e, 0xb2, 0x29, 0xd8, 0xd4, 0xd5, 0x20, 0xca, 0xf7,
	0x59, 0xa5, 0x7d, 0x01, 0x04, 0x7d, 0x8f, 0x88, 0xbb, 0x82, 0xf1, 0x93, 0x3e, 0xff, 0xef, 0xbd,
	0x3f, 0x83, 0xbe, 0xda, 0xbb, 0x36, 0x5c, 0x8f, 0xe2, 0x79, 0xec, 0xfe, 0x0e, 0x5d, 0x65, 0xa6,
	0x0f, 0xf1, 0x6e, 0x7d, 0xae, 0xf1, 0xcc, 0xb9, 0x9d, 0xfa, 0x5c, 0xf7, 0xef, 0x36, 0xd8, 0x54,
	0xf3, 0x82, 0x97, 0x3c, 0xbd, 0x3c, 0x1f, 0x53, 0xb0, 0x4b, 0xb1, 0x0e, 0x54, 0x24, 0x9d, 0xf6,
	0xcc, 0xc0, 0xbb, 0x97, 0x62, 0xbd, 0x54, 0x08, 0x12, 0xa2, 0x3c, 0x7b, 0x08, 0xd6, 0x3c, 0xaa,
	0xf2, 0xf2, 0xd8, 0x1c, 0x84, 0x7e, 0x22, 0x84, 0x7d, 0x0e, 0xd6, 0xfa, 0x51, 0x6f, 0xa0, 0x2b,
	0xe8, 0xaf, 0x1f, 0x97, 0xf5, 0xf6, 0x68, 0x8b, 0xa2, 0x14, 0x69, 0xb2, 0x4f, 0xf5, 0x1c, 0xa1,
	0x2b, 0x16, 0x0a, 0x41, 0x02, 0xba, 0xe2, 0x48, 0x30, 0x6b, 0x53, 0x1c, 0x09, 0x58, 0x78, 0x51,
	0x0a, 0x1e, 0x3b, 0x3d, 0x5d, 0x38, 0x45, 0xe8, 0x47, 0xd5, 0x58, 0x32, 0x41, 0x5f, 0xf9, 0x91,
	0x90, 0xd5, 0xa1, 0x10, 0xd8, 0x77, 0xbc, 0x17, 0x25, 0x2d, 0xd5, 0xf7, 0x52, 0xac, 0x29, 0xf5,
	0x25, 0x0c, 0xf4, 0x71, 0x2a, 0xad, 0xa6, 0xc2, 0xd6, 0x18, 0x52, 0xdc, 0x8f, 0xe0, 0xe5, 0xcf,
	0xa2, 0xa2, 0xfe, 0x2d, 0xab, 0x52, 0xf0, 0xd4, 0x17, 0x3b, 0x37, 0x82, 0xd1, 0x31, 0x90, 0x45,
	0x9e, 0x49, 0x51, 0x5b, 0xb0, 0x75, 0xb2, 0x20, 0x9b, 0x82, 0x49, 0x9a, 0x48, 0x92, 0xcd, 0xbe,
	0xeb, 0xa9, 0x11, 0x95, 0xbe, 0x86, 0xd9, 0x2b, 0xe8, 0xaa, 0x47, 0xc5, 0xa0, 0xbc, 0xe9, 0x91,
	0x09, 0x7c, 0x05, 0xba, 0xbf, 0xc1, 0x60, 0xb9, 0x0f, 0x65, 0x54, 0x26, 0xa1, 0xf0, 0xc5, 0xee,
	0xa2, 0x6e, 0xe7, 0xe3, 0xd8, 0x7e, 0x3a, 0x8e, 0xda, 0x10, 0xc6, 0xc9, 0x10, 0xaf, 0x61, 0xd8,
	0xd8, 0x58, 0x16, 0xec, 0x13, 0x30, 0xe5, 0x3e, 0x44, 0x5f, 0x6a, 0x0b, 0xcb, 0x7d, 0x38, 0x8f,
	0xdd, 0x02, 0x46, 0xf7, 0x99, 0x6c, 0x96, 0xf0, 0x3c, 0xb1, 0x51, 0x59, 0xfb, 0x3f, 0x2a, 0x33,
	0x2e, 0x54, 0xd6, 0xb0, 0x6a, 0x0f, 0xba, 0x3f, 0xa6, 0x45, 0x75, 0x70, 0x53, 0x98, 0xdc, 0x17,
	0xb8, 0xea, 0x4d, 0x44, 0x93, 0x88, 0x87, 0x5f, 0x03, 0x70, 0x15, 0x9d, 0x0a, 0xb0, 0x34, 0xa2,
	0x1e, 0x81, 0x8c, 0x9f, 0x46, 0x04, 0xbf, 0xf1, 0x45, 0x8b, 0x78, 0x16, 0x48, 0x91, 0xd5, 0xcf,
	0x2b, 0x56, 0xd1, 0xf7, 0x87, 0x11, 0xcf, 0x96, 0x22, 0xd3, 0x0f, 0xea, 0xdd, 0x5f, 0x6d, 0x30,
	0xde, 0x2c, 0xe6, 0xec, 0x0b, 0xb0, 0xde, 0x8a, 0xf7, 0xfa, 0x3f, 0x72, 0x94, 0xeb, 0xca, 0xf4,
	0x54, 0x51, 0x2f, 0xd8, 0x2b, 0xe8, 0xbf, 0x15, 0xef, 0xd5, 0xa8, 0x6a, 0xb5, 0x1a, 0xd9, 0x1b,
	0x18, 0x2d, 0xb5, 0x55, 0xf4, 0xa8, 0x0d, 0xbc, 0x46, 0xd4, 0x60, 0xde, 0x82, 0x55, 0x2b, 0xc0,
	0x86, 0x5e, 0x53, 0xe6, 0xab, 0x91, 0x77, 0x26, 0x0e, 0xed, 0x6b, 0x37, 0x74, 0x60, 0x63, 0xef,
	0x5c, 0x95, 0xc6, 0xbe, 0xdf, 0xc1, 0xe8, 0xdc, 0xac, 0x8c, 0x79, 0xff, 0x72, 0xef, 0xd5, 0xd8,
	0x3b, 0x37, 0xaf, 0xfb, 0xe2, 0x9b, 0x16, 0xbb, 0x85, 0xe1, 0x59, 0xc7, 0xd9, 0x4b, 0xef, 0xa9,
	0x02, 0xa7, 0x83, 0x42, 0x93, 0xfe, 0xba, 0xdf, 0xfe, 0x13, 0x00, 0x00, 0xff, 0xff, 0x01, 0x46,
	0x2e, 0xc3, 0x88, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// APIClient is the client API for API service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type APIClient interface {
	NewPrices(ctx context.Context, in *Prices, opts ...grpc.CallOption) (*Empty, error)
	NewTrade(ctx context.Context, in *Trade, opts ...grpc.CallOption) (*Empty, error)
	SetPriceParams(ctx context.Context, in *PriceParams, opts ...grpc.CallOption) (*Empty, error)
	Subscribe(ctx context.Context, in *SubscribeReq, opts ...grpc.CallOption) (*SubscribeResp, error)
	Unsubscribe(ctx context.Context, in *UnsubscribeReq, opts ...grpc.CallOption) (*Empty, error)
	GetPriceStream(ctx context.Context, in *GetPriceStreamReq, opts ...grpc.CallOption) (API_GetPriceStreamClient, error)
	UpdateAccount(ctx context.Context, in *UpdateAccountReq, opts ...grpc.CallOption) (*Empty, error)
}

type aPIClient struct {
	cc *grpc.ClientConn
}

func NewAPIClient(cc *grpc.ClientConn) APIClient {
	return &aPIClient{cc}
}

func (c *aPIClient) NewPrices(ctx context.Context, in *Prices, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/API/NewPrices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) NewTrade(ctx context.Context, in *Trade, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/API/NewTrade", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) SetPriceParams(ctx context.Context, in *PriceParams, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/API/SetPriceParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) Subscribe(ctx context.Context, in *SubscribeReq, opts ...grpc.CallOption) (*SubscribeResp, error) {
	out := new(SubscribeResp)
	err := c.cc.Invoke(ctx, "/API/Subscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) Unsubscribe(ctx context.Context, in *UnsubscribeReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/API/Unsubscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIClient) GetPriceStream(ctx context.Context, in *GetPriceStreamReq, opts ...grpc.CallOption) (API_GetPriceStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_API_serviceDesc.Streams[0], "/API/GetPriceStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &aPIGetPriceStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type API_GetPriceStreamClient interface {
	Recv() (*StreamResponse, error)
	grpc.ClientStream
}

type aPIGetPriceStreamClient struct {
	grpc.ClientStream
}

func (x *aPIGetPriceStreamClient) Recv() (*StreamResponse, error) {
	m := new(StreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *aPIClient) UpdateAccount(ctx context.Context, in *UpdateAccountReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/API/UpdateAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// APIServer is the server API for API service.
type APIServer interface {
	NewPrices(context.Context, *Prices) (*Empty, error)
	NewTrade(context.Context, *Trade) (*Empty, error)
	SetPriceParams(context.Context, *PriceParams) (*Empty, error)
	Subscribe(context.Context, *SubscribeReq) (*SubscribeResp, error)
	Unsubscribe(context.Context, *UnsubscribeReq) (*Empty, error)
	GetPriceStream(*GetPriceStreamReq, API_GetPriceStreamServer) error
	UpdateAccount(context.Context, *UpdateAccountReq) (*Empty, error)
}

// UnimplementedAPIServer can be embedded to have forward compatible implementations.
type UnimplementedAPIServer struct {
}

func (*UnimplementedAPIServer) NewPrices(ctx context.Context, req *Prices) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewPrices not implemented")
}
func (*UnimplementedAPIServer) NewTrade(ctx context.Context, req *Trade) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewTrade not implemented")
}
func (*UnimplementedAPIServer) SetPriceParams(ctx context.Context, req *PriceParams) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetPriceParams not implemented")
}
func (*UnimplementedAPIServer) Subscribe(ctx context.Context, req *SubscribeReq) (*SubscribeResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Subscribe not implemented")
}
func (*UnimplementedAPIServer) Unsubscribe(ctx context.Context, req *UnsubscribeReq) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Unsubscribe not implemented")
}
func (*UnimplementedAPIServer) GetPriceStream(req *GetPriceStreamReq, srv API_GetPriceStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method GetPriceStream not implemented")
}
func (*UnimplementedAPIServer) UpdateAccount(ctx context.Context, req *UpdateAccountReq) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAccount not implemented")
}

func RegisterAPIServer(s *grpc.Server, srv APIServer) {
	s.RegisterService(&_API_serviceDesc, srv)
}

func _API_NewPrices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Prices)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).NewPrices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/API/NewPrices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).NewPrices(ctx, req.(*Prices))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_NewTrade_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Trade)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).NewTrade(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/API/NewTrade",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).NewTrade(ctx, req.(*Trade))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_SetPriceParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PriceParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).SetPriceParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/API/SetPriceParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).SetPriceParams(ctx, req.(*PriceParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_Subscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubscribeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).Subscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/API/Subscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).Subscribe(ctx, req.(*SubscribeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_Unsubscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnsubscribeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).Unsubscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/API/Unsubscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).Unsubscribe(ctx, req.(*UnsubscribeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _API_GetPriceStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetPriceStreamReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(APIServer).GetPriceStream(m, &aPIGetPriceStreamServer{stream})
}

type API_GetPriceStreamServer interface {
	Send(*StreamResponse) error
	grpc.ServerStream
}

type aPIGetPriceStreamServer struct {
	grpc.ServerStream
}

func (x *aPIGetPriceStreamServer) Send(m *StreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _API_UpdateAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAccountReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServer).UpdateAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/API/UpdateAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServer).UpdateAccount(ctx, req.(*UpdateAccountReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _API_serviceDesc = grpc.ServiceDesc{
	ServiceName: "API",
	HandlerType: (*APIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewPrices",
			Handler:    _API_NewPrices_Handler,
		},
		{
			MethodName: "NewTrade",
			Handler:    _API_NewTrade_Handler,
		},
		{
			MethodName: "SetPriceParams",
			Handler:    _API_SetPriceParams_Handler,
		},
		{
			MethodName: "Subscribe",
			Handler:    _API_Subscribe_Handler,
		},
		{
			MethodName: "Unsubscribe",
			Handler:    _API_Unsubscribe_Handler,
		},
		{
			MethodName: "UpdateAccount",
			Handler:    _API_UpdateAccount_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetPriceStream",
			Handler:       _API_GetPriceStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "price_api.proto",
}
